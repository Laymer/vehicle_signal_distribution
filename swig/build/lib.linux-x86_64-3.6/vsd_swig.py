# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_vsd_swig')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_vsd_swig')
    _vsd_swig = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_vsd_swig', [dirname(__file__)])
        except ImportError:
            import _vsd_swig
            return _vsd_swig
        try:
            _mod = imp.load_module('_vsd_swig', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _vsd_swig = swig_import_helper()
    del swig_import_helper
else:
    import _vsd_swig
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0


def dstc_process_events(arg1):
    return _vsd_swig.dstc_process_events(arg1)
dstc_process_events = _vsd_swig.dstc_process_events

def vsd_data_type(sig):
    return _vsd_swig.vsd_data_type(sig)
vsd_data_type = _vsd_swig.vsd_data_type

def vsd_publish(sig):
    return _vsd_swig.vsd_publish(sig)
vsd_publish = _vsd_swig.vsd_publish

def vsd_set_value_by_path_int8(context, path, val):
    return _vsd_swig.vsd_set_value_by_path_int8(context, path, val)
vsd_set_value_by_path_int8 = _vsd_swig.vsd_set_value_by_path_int8

def vsd_value(sig):
    return _vsd_swig.vsd_value(sig)
vsd_value = _vsd_swig.vsd_value

def vsd_load_from_file(ctx, fname):
    return _vsd_swig.vsd_load_from_file(ctx, fname)
vsd_load_from_file = _vsd_swig.vsd_load_from_file

def vsd_subscribe(ctx, sig, callback):
    return _vsd_swig.vsd_subscribe(ctx, sig, callback)
vsd_subscribe = _vsd_swig.vsd_subscribe

def vsd_signal_to_path_static(desc):
    return _vsd_swig.vsd_signal_to_path_static(desc)
vsd_signal_to_path_static = _vsd_swig.vsd_signal_to_path_static

def swig_vsd_create_context():
    return _vsd_swig.swig_vsd_create_context()
swig_vsd_create_context = _vsd_swig.swig_vsd_create_context

def swig_vsd_find_signal_by_path(ctx, path):
    return _vsd_swig.swig_vsd_find_signal_by_path(ctx, path)
swig_vsd_find_signal_by_path = _vsd_swig.swig_vsd_find_signal_by_path

def swig_vsd_find_signal_by_id(ctx, id):
    return _vsd_swig.swig_vsd_find_signal_by_id(ctx, id)
swig_vsd_find_signal_by_id = _vsd_swig.swig_vsd_find_signal_by_id

def swig_vsd_subscribe(ctx, sig):
    return _vsd_swig.swig_vsd_subscribe(ctx, sig)
swig_vsd_subscribe = _vsd_swig.swig_vsd_subscribe

def swig_vsd_data_type(sig):
    return _vsd_swig.swig_vsd_data_type(sig)
swig_vsd_data_type = _vsd_swig.swig_vsd_data_type

def swig_vsd_set_python_callback(ctx, cb):
    return _vsd_swig.swig_vsd_set_python_callback(ctx, cb)
swig_vsd_set_python_callback = _vsd_swig.swig_vsd_set_python_callback

def swig_vsd_value_i8(ctx, sig):
    return _vsd_swig.swig_vsd_value_i8(ctx, sig)
swig_vsd_value_i8 = _vsd_swig.swig_vsd_value_i8

def swig_vsd_value_u8(ctx, sig):
    return _vsd_swig.swig_vsd_value_u8(ctx, sig)
swig_vsd_value_u8 = _vsd_swig.swig_vsd_value_u8

def swig_vsd_value_i16(ctx, sig):
    return _vsd_swig.swig_vsd_value_i16(ctx, sig)
swig_vsd_value_i16 = _vsd_swig.swig_vsd_value_i16

def swig_vsd_value_u16(ctx, sig):
    return _vsd_swig.swig_vsd_value_u16(ctx, sig)
swig_vsd_value_u16 = _vsd_swig.swig_vsd_value_u16

def swig_vsd_value_i32(ctx, sig):
    return _vsd_swig.swig_vsd_value_i32(ctx, sig)
swig_vsd_value_i32 = _vsd_swig.swig_vsd_value_i32

def swig_vsd_value_u32(ctx, sig):
    return _vsd_swig.swig_vsd_value_u32(ctx, sig)
swig_vsd_value_u32 = _vsd_swig.swig_vsd_value_u32

def swig_vsd_value_f(ctx, sig):
    return _vsd_swig.swig_vsd_value_f(ctx, sig)
swig_vsd_value_f = _vsd_swig.swig_vsd_value_f

def swig_vsd_value_d(ctx, sig):
    return _vsd_swig.swig_vsd_value_d(ctx, sig)
swig_vsd_value_d = _vsd_swig.swig_vsd_value_d

def swig_vsd_value_b(ctx, sig):
    return _vsd_swig.swig_vsd_value_b(ctx, sig)
swig_vsd_value_b = _vsd_swig.swig_vsd_value_b

def swig_vsd_set_i8(ctx, sig, val):
    return _vsd_swig.swig_vsd_set_i8(ctx, sig, val)
swig_vsd_set_i8 = _vsd_swig.swig_vsd_set_i8

def swig_vsd_set_u8(ctx, sig, val):
    return _vsd_swig.swig_vsd_set_u8(ctx, sig, val)
swig_vsd_set_u8 = _vsd_swig.swig_vsd_set_u8

def swig_vsd_set_i16(ctx, sig, val):
    return _vsd_swig.swig_vsd_set_i16(ctx, sig, val)
swig_vsd_set_i16 = _vsd_swig.swig_vsd_set_i16

def swig_vsd_set_u16(ctx, sig, val):
    return _vsd_swig.swig_vsd_set_u16(ctx, sig, val)
swig_vsd_set_u16 = _vsd_swig.swig_vsd_set_u16

def swig_vsd_set_i32(ctx, sig, val):
    return _vsd_swig.swig_vsd_set_i32(ctx, sig, val)
swig_vsd_set_i32 = _vsd_swig.swig_vsd_set_i32

def swig_vsd_set_u32(ctx, sig, val):
    return _vsd_swig.swig_vsd_set_u32(ctx, sig, val)
swig_vsd_set_u32 = _vsd_swig.swig_vsd_set_u32

def swig_vsd_set_f(ctx, sig, val):
    return _vsd_swig.swig_vsd_set_f(ctx, sig, val)
swig_vsd_set_f = _vsd_swig.swig_vsd_set_f

def swig_vsd_set_d(ctx, sig, val):
    return _vsd_swig.swig_vsd_set_d(ctx, sig, val)
swig_vsd_set_d = _vsd_swig.swig_vsd_set_d

def swig_vsd_set_b(ctx, sig, val):
    return _vsd_swig.swig_vsd_set_b(ctx, sig, val)
swig_vsd_set_b = _vsd_swig.swig_vsd_set_b
# This file is compatible with both classic and new-style classes.


